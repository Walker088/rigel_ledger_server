// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'es'
	| 'zh'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	home: {
		/**
		 * S​i​g​n​ ​i​n​ ​-​ ​R​i​g​e​l​L​e​d​g​e​r​ ​A​c​c​o​u​n​t
		 */
		pageTitle: string
		/**
		 * S​i​g​n​ ​i​n
		 */
		title: string
		/**
		 * U​s​e​ ​y​o​u​r​ ​R​i​g​e​l​L​e​d​g​e​r​ ​A​c​c​o​u​n​t
		 */
		subTitle: string
		/**
		 * S​i​g​n​ ​I​n​ ​w​i​t​h​ ​G​i​t​h​u​b
		 */
		signinMsgGithub: string
		/**
		 * S​i​g​n​ ​I​n​ ​w​i​t​h​ ​G​o​o​g​l​e
		 */
		signinMsgGoogle: string
		/**
		 * A​p​p​ ​C​h​a​n​g​e​ ​L​o​g​s
		 */
		changeLogTitle: string
	}
	oauthRedirect: {
		/**
		 * R​e​d​i​r​e​c​t​i​n​g​ ​t​o​ ​u​s​e​r​'​s​ ​h​o​m​e
		 */
		pageTitle: string
	}
	protect: {
		home: {
			/**
			 * {​u​s​e​r​N​a​m​e​}​'​s​ ​l​e​d​g​e​r​ ​h​o​m​e
			 * @param {string} userName
			 */
			pageTitle: RequiredParams<'userName'>
			/**
			 * W​e​l​c​o​m​e​ ​B​a​c​k​ ​{​u​s​e​r​N​a​m​e​}
			 * @param {string} userName
			 */
			title: RequiredParams<'userName'>
		}
	}
}

export type TranslationFunctions = {
	home: {
		/**
		 * Sign in - RigelLedger Account
		 */
		pageTitle: () => LocalizedString
		/**
		 * Sign in
		 */
		title: () => LocalizedString
		/**
		 * Use your RigelLedger Account
		 */
		subTitle: () => LocalizedString
		/**
		 * Sign In with Github
		 */
		signinMsgGithub: () => LocalizedString
		/**
		 * Sign In with Google
		 */
		signinMsgGoogle: () => LocalizedString
		/**
		 * App Change Logs
		 */
		changeLogTitle: () => LocalizedString
	}
	oauthRedirect: {
		/**
		 * Redirecting to user's home
		 */
		pageTitle: () => LocalizedString
	}
	protect: {
		home: {
			/**
			 * {userName}'s ledger home
			 */
			pageTitle: (arg: { userName: string }) => LocalizedString
			/**
			 * Welcome Back {userName}
			 */
			title: (arg: { userName: string }) => LocalizedString
		}
	}
}

export type Formatters = {}
